<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1459977678455">{:repl-history {:ide [], :local [&quot;(loop [x 15]\n  (when (&gt; x 1)\n    x\n    (recur (- x 1))))&quot; &quot;(loop [x 15]\n  (when (&gt; x 1)\n    (println x)\n    (recur (- x 1))))&quot; &quot;(loop [x 15]\n  (when (&gt; x 1)\n   \n    (recur (- x 1))\n    x))&quot; &quot;(loop [x 15]\n  (when (&gt; x 1)\n    (recur (- x 1))\n    (println x)))&quot; &quot;(loop [x 15]\n  (when (&gt; x 1)\n    x\n    (recur (- x 1))\n    ))&quot; &quot;(loop [x 15]\n  (when (&gt; x 1)\n    (println x)\n    (recur (- x 1))\n    ))&quot; &quot;(for [x (range 15)\n      y [1]]\n  [y x]\n  )&quot; &quot;(for [x (range 15)\n      y [1]]\n  (first [y x])\n  )&quot; &quot;(for [x (range 15)\n      y [1]]\n  (str (first [y x]))\n  )&quot; &quot;(for [x (range 15)\n      y [1]]\n  (concat (first [y x]))\n  )&quot; &quot;(for [x (range 15)\n      y [1]]\n   (first [y x])\n  )&quot; &quot;(str (/ 17 15))&quot; &quot;(doc *)&quot; &quot;(*)&quot; &quot;(* 6)&quot; &quot;(* 5 5)&quot; &quot;(* 5 5 5)&quot; &quot;(doc class)&quot; &quot;(class str)&quot; &quot;(doc str)&quot; &quot;(keys (ns-publics 'lib.maps))&quot; &quot;(new-gean-list 1)&quot; &quot;(keyByValue 6 genes)&quot; &quot;(quat 15)&quot; &quot;(quat 14 15)&quot; &quot;(quot 14 15)&quot; &quot;(quot 20 15)&quot; &quot;( * (quot 33 15) 15)&quot; &quot;(( * (quot 33 15) 15)(quot 33 15))&quot; &quot;(list ( * (quot 33 15) 15)(quot 33 15))&quot; &quot;(list ( * (quot 33 15) 15)(- ( * (quot 33 15) 15)(+ 1 (quot 33 15))))&quot; &quot;(list ( * (quot 33 15) 15)(+ 1 (quot 33 15)))&quot; &quot;(list ( * (quot 33 15) 15)(* (+ 1 (quot 33 15)) 15))&quot; &quot;(list ( * (quot 33 15) 15)(- (* (+ 1 (quot 33 15)) 15)) (- ( * (quot 33 15) 15)(+ 1 (quot 33 15))))&quot; &quot;(quot 33 15)&quot; &quot;(+ 1 (quot 33 15))&quot; &quot;(* 15 (+ 1 (quot 33 15)))&quot; &quot;(genes-needed 60)&quot; &quot;(genes-needed 59)&quot; &quot;(max-gene 59)&quot; &quot;(max-gene 33)&quot; &quot;(max-gene 3)&quot; &quot;(unary 15)&quot; &quot;(unary 12)&quot; &quot;(unary (- 1(genes-needed 16)))&quot; &quot;(unary (- 1(genes-needed 33)))&quot; &quot;(genes-needed 33)&quot; &quot;(unary (- (genes-needed num) 1))&quot; &quot;(unary (- (genes-needed 15) 1))&quot; &quot;(unary (- (genes-needed 13) 1))&quot; &quot;(unary (- (genes-needed 33) 1))&quot; &quot;(phynome 14)&quot; &quot;(concat (unary (- (genes-needed 17) 1)) (last-gene 17))&quot; &quot;(list (unary (- (genes-needed 17) 1)) (last-gene 17))&quot; &quot;(list (unary (- (genes-needed 33) 1)) (last-gene 17))&quot; &quot;(flatten(list (unary (- (genes-needed 33) 1)) (last-gene 17)))&quot; &quot;(+ 15 15 15 5)&quot; &quot;(quot 55 15)&quot; &quot;(* 4 15)&quot; &quot;(max-gene 55)&quot; &quot;(last-gene 55)&quot; &quot;(phynome 88)&quot; &quot;(for [x [(phynome 88)]\n      y [keyByValue]\n      (y x)])&quot; &quot;(for [x [(phynome 88)]\n      y [keyByValue]\n      (y x genes)])&quot; &quot;(for [x [(phynome 88)]\n      y [2]\n      [x y]])&quot; &quot;(for [x [(phynome 88)]\n      y [1 2 3]]\n  [x y])&quot; &quot;(for [x [(phynome 88)]\n      y [keyByValue]]\n  (y x genes))&quot; &quot;(for [x [(phynome 88)]\n      y [genes]]\n  [x y])&quot; &quot;(phynome 55)&quot; &quot;(for [x [(phynome 88)]\n      y [genes]]\n  [y x])&quot; &quot;(for [x [(phynome 88)]\n      y [speed]]\n  [y x])&quot; &quot;(for [x ['(2 4 34 32)]\n      y [colour]]\n  [y x])&quot; &quot;(for [x [colour]\n      y ['(1 2 5 4)]]\n  (x y))&quot; &quot;geans-list&quot; &quot;(for [x [(vec (phynome 88))]\n      y [genes]]\n  [y x])&quot; &quot;(vec (phynome 88))&quot; &quot;(for [x [15 15 15 15 15 13]\n      y [genes]]\n  [y x])&quot; &quot;(for [x [(vec (phynome 88))]\n      y [genes]]\n  (y x))&quot; &quot;(for [x [(phynome 88)]\n      y [genes]]\n  (y x))&quot; &quot;(for [x [(phynome 88)]\n      y genes]\n  (y x))&quot; &quot;(for [x [(vec (phynome 88))]\n      y genes]\n  (y x))&quot; &quot;(for [x genes\n      y [15 15 15 13]]\n  (x y))&quot; &quot;(genes 15)&quot; &quot;(for [x genes\n      y [15 15 15 13]]\n  (keyByValue y x))&quot; &quot;(for [x genes\n      y [15 15 15 13]]\n  [(keyByValue y x)])&quot; &quot;(keyByValue 15 genes)&quot; &quot;(for [x ['a 'b 'c]\n      y [1 2 3]]\n  [x y])&quot; &quot;(for [x [(phynome 17)]\n      y [1 2 3]]\n  [x y])&quot; &quot;(for [x [(concat (phynome 17))]\n      y [1 2 3]]\n  [x y])&quot; &quot;(for [x [(flatten (phynome 17))]\n      y [1 2 3]]\n  [x y])&quot; &quot;(for [x [(flatten (phynome 17))]\n      y [1 2 3]]\n  [y x])&quot; &quot;(phynome 17)&quot; &quot;(vec phynome)&quot; &quot;(vec (phynome 17))&quot; &quot;(for [x [(vec (phynome 17))]\n      y [1 2 3]]\n  [y x])&quot; &quot;(for [x (vec (phynome 17))\n      y [1 2 3]]\n  [y x])&quot; &quot;(for [x (vec (phynome 17))\n      y [genes]]\n  (y x))&quot; &quot;(for [x (vec (phynome 17))\n      y [genes]]\n  (keyByValue x y))&quot; &quot;(gen-dna 16)&quot; &quot;(gen-gene 55)&quot; &quot;(gen-gene 99)&quot;], :remote []}}</component>
</project>