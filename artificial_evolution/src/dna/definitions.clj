(ns dna.definitions
  (require [comm.translater :refer :all])

  )

(def genes
  {:0000 0
   :0001 1
   :0010 2
   :0011 3
   :0100 4
   :0101 5
   :0110 6
   :0111 7
   :1000 8
   :1001 9
   :1010 10
   :1011 11
   :1100 12
   :1101 13
   :1110 14
   :1111 15
   })

(def speed
  {:1 0.0
   :2 0.1
   :3 0.2
   :4 0.3
   :5 0.4
   :6 0.5
   :7 0.6
   :8 0.7
   :9 0.8
   :10 0.9
   :11 1
   :12 1.1
   :13 1.2
   :14 1.3
   :15 1.4
   :16 1.5
   :17 1.6
   :18 1.7
   :19 1.8
   :20 1.9
   :21 2
   })

(def colour
  {
   :1	0
   :2	1
   :3	2
   :4	3
   :5	4
   :6	5
   :7	6
   :8	7
   :9	8
   :10	9
   :11	9.9
   :12	10
   :13	11
   :14	12
   :15	13
   :16	14
   :17	15
   :18	16
   :19	17
   :20	18
   :21	19
   :22	19.9
   :23	20
   :24	21
   :25	22
   :26	23
   :27	24
   :28	25
   :29	26
   :30	27
   :31	28
   :32	29
   :33	29.9
   :34	30
   :35	31
   :36	32
   :37	33
   :38	34
   :39	35
   :40	36
   :41	37
   :42	38
   :43	39
   :44	39.9
   :45	40
   :46	41
   :47	42
   :48	43
   :49	44
   :50	45
   :51	46
   :52	47
   :53	48
   :54	49
   :55	49.9
   :56	50
   :57	51
   :58	52
   :59	53
   :60	54
   :61	55
   :62	56
   :63	57
   :64	58
   :65	59
   :66	59.9
   :67	60
   :68	61
   :69	62
   :70	63
   :71	64
   :72	65
   :73	66
   :74	67
   :75	68
   :76	69
   :77	69.9
   :78	70
   :79	71
   :80	72
   :81	73
   :82	74
   :83	75
   :84	76
   :85	77
   :86	78
   :87	79
   :88	79.9
   :89	80
   :90	81
   :91	82
   :92	83
   :93	84
   :94	85
   :95	86
   :96	87
   :97	88
   :98	89
   :99	89.9
   :100	90
   :101	91
   :102	92
   :103	93
   :104	94
   :105	95
   :106	96
   :107	97
   :108	98
   :109	99
   :110	99.9
   :111	100
   :112	101
   :113	102
   :114	103
   :115	104
   :116	105
   :117	106
   :118	107
   :119	108
   :120	109
   :121	109.9
   :122	110
   :123	111
   :124	112
   :125	113
   :126	114
   :127	115
   :128	116
   :129	117
   :130	118
   :131	119
   :132	119.9
   :133	120
   :134	121
   :135	122
   :136	123
   :137	124
   :138	125
   :139	126
   :140	127
   :141	128
   :142	129
   :143	129.9
   :144	130
   :145	131
   :146	132
   :147	133
   :148	134
   :149	135
   :150	136
   :151	137
   :152	138
   :153	139
   :154	139.9
   })



;(defn unary [num]
;  (let x (loop [y num]
;          (when (> y 1)
;            (concat x 1)
;            (recure (- y 1))))))